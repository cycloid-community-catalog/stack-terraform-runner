groups:

- name: overview
  jobs:
  - terraform-plan
  - terraform-apply

- name: destroy
  jobs:
  - terraform-destroy

resource_types:

- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: ((terraform_version))

resources:

- name: tfstate
  type: terraform
  icon: terraform
  source:
    env_name: ((env))
    private_key: ((terraform_modules_private_key))
    backend_type: azurerm
    backend_config:
      container_name: ((terraform_storage_container_name))
      key: ((terraform_storage_container_path))/((project))-((env)).tfstate
      resource_group_name: ((terraform_resource_group_name))
      storage_account_name: ((terraform_storage_account_name))
      access_key: ((terraform_storage_access_key))
    vars:
      azure_location: ((azure_location))
      azure_env: ((azure_env))
      azure_client_id: ((azure_client_id))
      azure_client_secret: ((azure_client_secret))
      azure_subscription_id: ((azure_subscription_id))
      azure_tenant_id: ((azure_tenant_id))
      env: ((env))
      project: ((project))
      customer: ((customer))

# The Terraform config (will be merged with the stack)
- name: git_terraform
  type: git
  icon: git
  source:
    uri: ((git_repository))
    branch: ((git_branch))
    private_key: ((git_private_key))
    paths:
      - ((git_terraform_path))

jobs:

# Merge and trigger a plan whenever there is a commit in Terraform stack or config
- name: terraform-plan
  serial: True
  max_in_flight: 1
  build_logs_to_retain: 10
  plan:
    - do:
      - get: git_terraform
        trigger: true

      - put: tfstate
        params:
          plan_only: true
          terraform_source: git_terraform/((git_terraform_path))/

# Merge and trigger an apply manually (no autostart of this job)
- name: terraform-apply
  serial: True
  max_in_flight: 1
  build_logs_to_retain: 10
  plan:
    - do:
      - get: git_terraform
        trigger: false
        passed:
          - terraform-plan
      - get: tfstate
        trigger: false
        passed:
          - terraform-plan

      - put: tfstate
        params:
          plan_run: true
          terraform_source: git_terraform/((git_terraform_path))/

- name: terraform-destroy
  max_in_flight: 1
  build_logs_to_retain: 10
  plan:
    - do:
        - get: git_terraform
          trigger: false

        - put: tfstate
          params:
            action: destroy
            terraform_source: git_terraform/((git_terraform_path))/
          get_params:
            action: destroy
